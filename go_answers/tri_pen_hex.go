/*
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.

https://projecteuler.net/problem=45
*/

package main

import (
	"fmt"
	"math"
)

func IsTri(number int) bool {
	val := (math.Sqrt(float64((8*number)+1)) - 1) / 2

	if float64(int(val)) == val {
		return true
	}

	return false
}

func IsPent(number int) bool {
	val := (math.Sqrt(float64((24*number)+1)) + 1) / 6

	if float64(int(val)) == val {
		return true
	}

	return false
}

func IsHex(number int) bool {
	val := (math.Sqrt(float64((8*number)+1)) + 1) / 4

	if float64(int(val)) == val {
		return true
	}

	return false
}

func FindTriPenHex(start int) int {
	for i := start; ; i++ {
		if IsTri(i) {
			if IsPent(i) {
				if IsHex(i) {
					return i
				}
			}
		}
	}
}

func main() {

	fmt.Println(IsTri(10))
	fmt.Println(IsTri(11))

	fmt.Println(IsPent(51))
	fmt.Println(IsPent(50))

	fmt.Println(IsHex(45))
	fmt.Println(IsHex(47))

	ans := FindTriPenHex(40756)
	fmt.Println(ans)

}
